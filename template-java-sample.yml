apiVersion: v1
kind: Template
labels:
  template: java-sample
  app: java-sample
message: A new java application has been created in your project.
metadata:
  annotations:
    description: Application template for Java applications built using S2I.
    iconClass: icon-jboss
    openshift.io/display-name: Red Hat OpenJDK 8
    tags: java,xpaas
    version: 1.1.0
  name: template-java-sample
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: web
      port: 80
      targetPort: 80
    selector:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
#    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${NAMESPACE}"
          name: registry.access.redhat.com/redhat-openjdk-18/openjdk18-openshift
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:latest"
- apiVersion: v1
  kind: DeploymentConfig 
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
    replicas: 1
    selector:
      name: "${APPLICATION_NAME}"
    template:
      metadata:
        name: "${APPLICATION_NAME}"
        labels:
          name: "${APPLICATION_NAME}"
      spec:
        containers:
        - name: java-sample
          image: " "
          ports:
          - containerPort: 8080

parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: java-sample
- name: NAMESPACE
  displayName: Namespace
  description: The OpenShift Namespace where the ImageStream resides.
  required: true
  value: openshift

